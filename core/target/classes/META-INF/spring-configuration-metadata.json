{
  "hints": [],
  "groups": [
    {
      "sourceType": "com.cloud.core.properties.TestPropertySource",
      "name": "cloud",
      "type": "com.cloud.core.properties.TestPropertySource"
    },
    {
      "sourceType": "com.cloud.core.properties.IgnoredUrlsProperties",
      "name": "ignored",
      "type": "com.cloud.core.properties.IgnoredUrlsProperties"
    },
    {
      "sourceType": "com.cloud.core.redis.RedisConfig",
      "name": "spring.redis.cluster.lettuce.pool",
      "sourceMethod": "redisPool()",
      "type": "org.apache.commons.pool2.impl.GenericObjectPoolConfig"
    },
    {
      "sourceType": "com.cloud.core.properties.XbootTokenProperties",
      "name": "xboot.token",
      "type": "com.cloud.core.properties.XbootTokenProperties"
    }
  ],
  "properties": [
    {
      "sourceType": "com.cloud.core.properties.TestPropertySource",
      "name": "cloud.ckl",
      "type": "java.lang.String"
    },
    {
      "sourceType": "com.cloud.core.properties.TestPropertySource",
      "name": "cloud.lj",
      "description": "1、yml文件中定义的属性值可以直接在类中 使用@Value(\"${xx.xx}\")取出，但是yml文件中必须有该值的配置2、@PropertySource(\"classpath:xx.properties\")使用@Value(\"${xx.xx}\")取出  直接将 xx.properties 文件中定义的值赋值给类的属性     但是使用@Value注解方式有一个不太友好的地方就是，当项目中有大量的属性进行配置的时候，我们需要一个个的在类的字段中增加@Value注解，这样确实很费劲，     不过我们可以通过Springboot提供的@ConfigurationProperties注解解决这个问题。 3、@PropertySource(\"classpath:xx.properties\")+@ConfigurationProperties(\"cloud\")  直接将xx.properties文件中cloud前缀下的值赋值给对应属性，不需要使用@value 如果@value与 yml中的冲突   ， 将使用 yml文件中的 注释；@PropertySource encoding用于指定读取属性文件所使用的编码，我们通常使用的是UTF-8；ignoreResourceNotFound含义是当指定的配置文件不存在是否报错，默认是false;比如上文中指定的加载属性文件是jdbc-bainuo-dev.properties。 如果该文件不存在，则ignoreResourceNotFound为true的时候，程序不会报错，如果ignoreResourceNotFound为false的时候，程序直接报错。实际项目开发中，最好设置ignoreResourceNotFound为false。该参数默认值为false。 注释；@ConfigurationProperties @ConfigurationProperties(prefix = \"spring.datasource.shareniu\",ignoreUnknownFields=true,ignoreInvalidFields=true) ignoreUnknownFields：忽略未知的字段。 ignoreInvalidFields：是否忽略验证失败的字段。这个怎么理解呢？比如我们在配置文件中配置了一个字符串类型的变量，类中的字段是int类型，那肯定会报错的。如果出现这种情况我们可以容忍，则需要配置该属性值为true。 该参数值默认为false。 其实 @PropertySource  负责定义变量取值的来源   优先级低于  yml     @Value   负责一个一个取值     @ConfigurationProperties  批量取值     但是@Value  优先级高于  @ConfigurationProperties",
      "type": "java.lang.String"
    },
    {
      "sourceType": "com.cloud.core.properties.TestPropertySource",
      "name": "cloud.zzl",
      "type": "java.lang.String"
    },
    {
      "sourceType": "com.cloud.core.properties.IgnoredUrlsProperties",
      "name": "ignored.urls",
      "type": "java.util.List<java.lang.String>"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.block-when-exhausted",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.eviction-policy-class-name",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.evictor-shutdown-timeout-millis",
      "type": "java.lang.Long"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.fairness",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.jmx-enabled",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.jmx-name-base",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.jmx-name-prefix",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.lifo",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.max-idle",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.max-total",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.max-wait-millis",
      "type": "java.lang.Long"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.min-evictable-idle-time-millis",
      "type": "java.lang.Long"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.min-idle",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.num-tests-per-eviction-run",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.soft-min-evictable-idle-time-millis",
      "type": "java.lang.Long"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.test-on-borrow",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.test-on-create",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.test-on-return",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.test-while-idle",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "name": "spring.redis.cluster.lettuce.pool.time-between-eviction-runs-millis",
      "type": "java.lang.Long"
    },
    {
      "sourceType": "com.cloud.core.properties.XbootTokenProperties",
      "defaultValue": 10,
      "name": "xboot.token.login-after-time",
      "description": "错误超过次数后多少分钟后才能继续登录（分钟）",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "com.cloud.core.properties.XbootTokenProperties",
      "defaultValue": 10,
      "name": "xboot.token.login-time-limit",
      "description": "限制用户登陆错误次数（次）",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "com.cloud.core.properties.XbootTokenProperties",
      "defaultValue": "password",
      "name": "xboot.token.password",
      "type": "java.lang.String"
    },
    {
      "sourceType": "com.cloud.core.properties.XbootTokenProperties",
      "defaultValue": false,
      "name": "xboot.token.redis",
      "description": "使用redis存储token",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "com.cloud.core.properties.XbootTokenProperties",
      "defaultValue": 7,
      "name": "xboot.token.save-login-time",
      "description": "用户选择保存登录状态对应token过期时间（天）",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "com.cloud.core.properties.XbootTokenProperties",
      "defaultValue": true,
      "name": "xboot.token.sdl",
      "description": "单点登陆",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "com.cloud.core.properties.XbootTokenProperties",
      "defaultValue": true,
      "name": "xboot.token.store-perms",
      "description": "存储权限数据",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "com.cloud.core.properties.XbootTokenProperties",
      "defaultValue": 30,
      "name": "xboot.token.token-expire-time",
      "description": "token默认过期时间",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "com.cloud.core.properties.XbootTokenProperties",
      "defaultValue": "username",
      "name": "xboot.token.username",
      "type": "java.lang.String"
    }
  ]
}